- name: Get secrets from vault
  hosts: localhost
  tasks:
    - name: Get bot secrets from vault
      community.hashi_vault.vault_kv2_get:
        url: "http://localhost:8200"
        path: tgbot
      register: tgbot

    - name: Get api secrets from vault
      community.hashi_vault.vault_kv2_get:
        url: "http://localhost:8200"
        path: api
      register: api

    - name: Get db secrets from vault
      community.hashi_vault.vault_kv2_get:
        url: "http://localhost:8200"
        path: database
      register: database

- name: Check availability of k8s host
  hosts: localhost
  connection: local
  tasks:
    - name: Wait for k8s port 22
      wait_for:
        host: "192.168.199.216"
        port: 22

- name: Deploy database
  hosts: localhost
  vars:
    db_name: "{{ hostvars.localhost.database.secret.db_name }}"
    db_user: "{{ hostvars.localhost.database.secret.db_user }}"
    db_password: "{{ hostvars.localhost.database.secret.db_password }}"
    cheque_api_token: "{{ hostvars.localhost.api.secret.token }}"
    telegram_api_token: "{{ hostvars.localhost.tgbot.secret.token }}"

  tasks:
    - name: Apply persistent volume
      kubernetes.core.k8s:
        apply: true
        namespace: "sung-ar"
        template: ./templates/database-volume.yaml

    - name: Apply persistent volume claim
      kubernetes.core.k8s:
        apply: true
        namespace: "sung-ar"
        template: ./templates/database-pv-claim.yaml

    - name: Apply database deployment
      kubernetes.core.k8s:
        apply: true
        namespace: "sung-ar"
        template: ./templates/database-deployment.yaml

    - name: Apply database service
      kubernetes.core.k8s:
        apply: true
        namespace: "sung-ar"
        template: ./templates/database-service.yaml

- name: Fill db from backup
  hosts: localhost
  vars:
    db_name: "{{ hostvars.localhost.database.secret.db_name }}"
    db_user: "{{ hostvars.localhost.database.secret.db_user }}"
    db_password: "{{ hostvars.localhost.database.secret.db_password }}"
  tasks:
    - name: Render backup script template
      ansible.builtin.template:
        src: ./templates/cheque_db.psql
        dest: ./cheque_db.psql
    - name: Execute backup script
      community.postgresql.postgresql_db:
        login_host: "192.168.199.216"
        port: 31337
        db: postgres
        login_user: postgres
        login_password: "{{ db_password }}"
        target: ./cheque_db.psql
        state: restore

- name: Deploy services
  hosts: localhost
  vars:
    db_name: "{{ hostvars.localhost.database.secret.db_name }}"
    db_user: "{{ hostvars.localhost.database.secret.db_user }}"
    db_password: "{{ hostvars.localhost.database.secret.db_password }}"
    cheque_api_token: "{{ hostvars.localhost.api.secret.token }}"
    telegram_api_token: "{{ hostvars.localhost.tgbot.secret.token }}"

  tasks:
    - name: Apply api deployment
      kubernetes.core.k8s:
        apply: true
        namespace: "sung-ar"
        template: ./templates/api-deployment.yaml

    - name: Apply api service
      kubernetes.core.k8s:
        apply: true
        namespace: "sung-ar"
        template: ./templates/api-service.yaml

    - name: Apply tgbot deployment
      kubernetes.core.k8s:
        apply: true
        namespace: "sung-ar"
        template: ./templates/tgbot-deployment.yaml
